#!/usr/bin/env bash

RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# use $EMACS or emacs if not set
EMACS="${EMACS:-$(which emacs)}"

# check if user $OSTYPE doesn't start with "darwin"
# if so resolve $EMACS with readlink

if [[ "$OSTYPE" != "darwin"* ]]; then
  echo "Resolving emacs..."
  EMACS="$(readlink -f $(which $EMACS))"
fi


echo "Found emacs: $EMACS"

themes="default one one-light vibrant acario-dark acario-light city-lights challenger-deep dark+ dracula ephemeral fairy-floss flatwhite gruvbox gruvbox-light henna horizon Iosvkem laserwave material manegarm miramare molokai monokai-classic monokai-pro moonlight nord nord-light nova oceanic-next old-hope opera opera-light outrun-electric palenight plain peacock rouge snazzy solarized-dark solarized-light sourcerer spacegrey tomorrow-day tomorrow-night wilmersdorf zenburn mono-dark mono-light tron"

help="episteme [EPISTEME-OPTS] [EMACS-OPTS]

EPISTEME-OPTS:
  -h             list usage
  -config        Episteme config directory (default: $HOME/.config/episteme)
  -themes        print theme names & exit
  -theme NAME    use theme called NAME

EMACS-OPTS:
  Standard Emacs options"

if [[ " $@[@] " =~ "-h" ]]; then
    echo "$help"
    exit 0
fi

if [[ " $@[@] " =~ "-themes" ]]; then
    echo "Available themes:"
    for t in $themes; do
        let "i=$RANDOM % 256"
        echo -en "\e[38;5;''${i}m$t \e[0m";
    done
    exit 0
fi

export HOME="${USERPROFILE:-$HOME}"
export HOME="${HOME//\\//}"

themeFlag=""
export theme="laserwave"

configFlag=""
export config="$HOME/.config/episteme/"

useSSH=0

for arg do
    shift

    if [ ! -z "$themeFlag" ]; then
        if [[ ! " $themes[@] " =~ " $arg " ]]; then
            printf "''${RED}âœ—''${YELLOW} '$arg' is not a valid theme.''${NC}\n"
            for t in $themes; do
                let "i=$RANDOM % 256"
                echo -en "\e[38;5;''${i}m$t \e[0m";
            done
            exit 1
        fi

        export theme="$arg"
        themeFlag=""
        continue
    fi

    if [ ! -z "$configFlag" ]; then
        export config="$arg"
        configFlag=""
        continue
    fi

    if [ "$arg" = "-theme" ]; then
        themeFlag="1"
        continue
    fi

    if [ "$arg" = "-config" ]; then
        configFlag="1"
        continue
    fi

    if [ "$arg" = "-ssh" ]; then
        useSSH=1
        echo "Using SSH for git."
        continue
    fi

    set -- "$@" "$arg"
done

export useSSH

export config=${config//\\//}

echo "Config directory: $config"

"$EMACS" -q \
--debug-init \
--eval "(setq byte-compile-warnings '(cl-functions))" \
--eval "(require 'org)" \
--chdir "$config/support/" \
--eval "(org-babel-tangle-file \"$config/support/support.org\" \"$config/support/support.el\")" \
--eval "(setq user-emacs-directory \"$config\")" \
--eval "(setq user-init-file \"$config/support/support.el\")" \
--load $config/support/support.el \
$@
