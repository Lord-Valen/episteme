#!/usr/bin/env bash

support_https_url="https://github.com/apoptosis/episteme.git"
support_ssh_url="git@github.com:apoptosis/episteme.git"

epicenter_url="git@github.com:apoptosis/epicenter.git"

RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

themes="default one one-light vibrant acario-dark acario-light city-lights challenger-deep dark+ dracula ephemeral fairy-floss flatwhite gruvbox gruvbox-light henna horizon Iosvkem laserwave material manegarm miramare molokai monokai-classic monokai-pro moonlight nord nord-light nova oceanic-next old-hope opera opera-light outrun-electric palenight plain peacock rouge snazzy solarized-dark solarized-light sourcerer spacegrey tomorrow-day tomorrow-night wilmersdorf zenburn mono-dark mono-light tron"

help="episteme [EPISTEME-OPTS] [EMACS-OPTS]

EPISTEME-OPTS:
-h             list usage
-config        Episteme config directory (default: $HOME/.config/episteme)
-themes        print theme names & exit
-theme NAME    use theme called NAME

EMACS-OPTS:
typical Emacs options"

if [[ " $@[@] " =~ "-h" ]]; then
    echo "$help"
    exit 0
fi

export HOME="${USERPROFILE:-$HOME}"
export HOME="${HOME//\\//}"

configFlag=""
config="$HOME/.config/episteme"

originalArgs=("$@")

for arg do
    shift

    if [ ! -z "$configFlag" ]; then
        config="$arg"
        configFlag=""
        continue
    fi

    if [ "$arg" = "-config" ]; then
        configFlag="1"
        continue
    fi

    set -- "$@" "$arg"
done

config=${config//\\//}
support="$config/support"
remotes="$config/remotes"
epicenter="$config/epicenter"

mkdir -p "$config"

run_episteme() {
    $support/episteme "${originalArgs[@]}"
}

# function to clone $support_url to $support
clone_support() {
    if [ ! -d "$support" ]; then
        echo "Cloning support repository to $support"
        git clone "$support_https_url" "$support" &> /dev/null
    fi
}

clone_epicenter() {
    if [ ! -d "$epicenter" ]; then
        echo "Cloning epicenter repository to $epicenter"
        git clone "$epicenter_url" "$epicenter" &> /dev/null
    fi
}

try_again() {
    echo -e "${RED}Episteme support directory is not a valid git repo.${NC}"
    echo -e "${YELLOW}Please remove $support directory and try again.${NC}"
}

check_remotes() {
    # if there are no subdirectories in $remotes then ask to clone the apoptosis remote
    # first get the number of subdirectories in $remotes
    remotesSubdirs=$(ls -A "$remotes" 2>/dev/null | wc -l)
    # if $remotesSubdirs is 0 then ask to clone the apoptosis remote
    if [ "$remotesSubdirs" -eq 0 ]
    then
        echo "Cloning apoptosis remote to $remotes/apoptosis"
        git clone https://github.com/apoptosis/apoptosis.org.git "$remotes/apoptosis" &> /dev/null
    fi

    # link support/ to remotes/episteme/
    if [ ! -d "$support/episteme" ]; then
        ln -s "$support" "$remotes/episteme"
    fi
}

first_run() {
    # ask for permission to do first time setup
    echo -e "${YELLOW}First run; Episteme will install a number of packages.${NC}"
    echo -e "${YELLOW}This could take a while. Ready?${NC}"
    read -p "y/n: " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]
    then
        clone_support
        clone_epicenter
        check_remotes
        run_episteme
    else
        echo -e "${YELLOW}Please run 'episteme' again when you are ready.${NC}"
    fi
}

# check if support directory exists
supportExists=$(ls -A "$support" 2>/dev/null)
# check if support directory is git repo
supportIsGit=$(git -C "$support" rev-parse --is-inside-work-tree 2>/dev/null)
# if supportExists and supportIsGit
if [ ! -z "$supportExists" ]; then
    if [ ! -z "$supportIsGit" ]; then
        origin=$(git -C "$support" config --get remote.origin.url)
        echo $origin
        # check if origin equal support_https_url or support_ssh_url
        if [[ "$origin" =~ "$support_https_url" ]] || [[ "$origin" =~ "$support_ssh_url" ]]; then
            run_episteme
        else
            echo "bad origin"
            try_again
        fi
    else
        echo "not git"
        try_again
    fi
else
    first_run "$@"
fi